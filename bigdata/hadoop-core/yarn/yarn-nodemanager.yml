---
apiVersion: v1
kind: Service
metadata:
  name: yarn-nm
  labels:
    app: yarn-nm
spec:
  ports:
  - port: 8042
    name: web
  clusterIP: None
  selector:
    app: nm
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nm
spec:
  serviceName: yarn-nm
  replicas: 2
  template:
    metadata:
      labels:
        app: nm
    spec:
      containers:
      - name: hadoop
        imagePullPolicy: Always 
        image: docker.io/pilchard/hadoop
        livenessProbe:
          httpGet:
            path: /
            port: 8042
            httpHeaders:
              - name: X-Custom-Header
                value: Awesome
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
#        resources:
#          requests:
#            cpu: "100m"
        ports:
        - containerPort: 8042
          name: web
        - containerPort: 8040
          name: rpc-1
        - containerPort: 44743
          name: rpc-2
        - containerPort: 13562
          name: rpc-3
        env:
        - name : HADOOP_HEAPSIZE
          value: "1000"          
        command:
        - sh
        - -c
        - |
          mkdir -p /data/2/yarn/logs /data/3/yarn/logs /data/1/yarn/logs
          mkdir -p /data/2/yarn/local /data/3/yarn/local /data/1/yarn/local
          chown yarn:yarn -R /data
          . /etc/default/hadoop
          su -s /bin/bash yarn -c ". /etc/default/hadoop && yarn nodemanager"
          #/etc/init.d/hadoop-yarn-nodemanager start 
        volumeMounts:
        - name: hadoop
          mountPath: /etc/hadoop/conf
      volumes:
      - name: hadoop
        configMap:
          name: hadoop
