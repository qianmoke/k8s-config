---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-nn
  labels:
    app: hdfs-nn
spec:
  ports:
  - port: 50070
    name: web
  - port: 8020
    name: rpc
  clusterIP: None
  selector:
    app: nn
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nn
spec:
  serviceName: hdfs-nn
  replicas: 2
  template:
    metadata:
      labels:
        app: nn
    spec:
      containers:
      - name: hadoop
        imagePullPolicy: IfNotPresent
        image: pilchard/hadoop:2.7.3
        resources:
          requests:
            cpu: "100m"
        ports:
        - containerPort: 50070
          name: web
        - containerPort: 8020
          name: rpc
        env:
        - name : HADOOP_HEAPSIZE
          value: "500"        
        command:
        - sh
        - -c
        - |
          if [ ! -d /tmp/dfs/name ];then
             if [ `hostname` == "nn-0" ];then
                hdfs namenode -format -force
                hdfs zkfc -formatZK
             else
                hdfs namenode -bootstrapStandby
             fi
          fi
          mkdir -p /hadoop/logs            
          echo "#!/usr/bin/env bash" > /usr/bin/nnok.sh
          echo "ps -ef|grep java|grep namenode 2>&1 >/dev/null && exit 0 || exit 1" >> /usr/bin/nnok.sh
          chmod +x /usr/bin/nnok.sh
          nohup hdfs zkfc 2>&1 >/hadoop/logs/zkfc.log &
          nohup hdfs namenode 2>&1 >/hadoop/logs/namenode.log &
          sleep 5
          tail -f /hadoop/logs/zkfc.log /hadoop/logs/namenode.log
        livenessProbe:
          exec:
            command:
            - "nnok.sh"
          initialDelaySeconds: 15
          timeoutSeconds: 5          
        volumeMounts:
        - name: hadoop
          mountPath: /hadoop/etc/hadoop   
        - name: dfs-nn
          mountPath: /tmp/dfs                      
      volumes:
      - name: hadoop
        configMap:
          name: hadoop
  volumeClaimTemplates:
  - metadata:
      name: dfs-nn
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
